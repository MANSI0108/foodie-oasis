openapi: 3.1.0
info:
  title: FOOD ORDERING APP
  description: Food-Ordering API based on the OpenAPI 3.0 specification.
  version: 1.0.0
  contact: 
    email: mansizti18@gmail.com
    url: "https://sample.dev"

servers:
  - url: http://localhost:3000/api/v1
    description: localhost version userlogin server url  

components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
  

paths:
  /register:
     post:
      tags:
        - Userlogin
      summary: Register with username, password, email, phone, role
      consumes:
        - application/json
      produces:
        - application/json  
      requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                     type: string
                  password:
                     type: string
                  email:
                     type: string       
                  phone:
                      type: string
                  role:
                      type: string  
      responses:
        '200': #status code
          description: Register by username, password, email, phone, role
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  username:
                     type: string
                  password:
                     type: string
                  email:
                     type: string       
                  phone:
                      type: string
                  role:
                      type: string        
        400:
          description: Bad request
        500:
          description: internal server error              


  /login-User:
     post:
      tags:
        - Userlogin
      summary: Login with username, password, role
      consumes:
        - application/json
      produces:
        - application/json  
      requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                     type: string
                  password:
                     type: string
                  role:
                      type: string  
      responses:
        '200': #status code
          description: Get Accesstoken
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  message:
                     type: string
                  accessToken:
                     type: string        
        400:
          description: Bad request
        500:
          description: internal server error          

  /currentuser:
    get:
      tags:
        - Userlogin
      summary: Get Current User info after Login
      security:
        - bearerAuth: []  
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                    id:
                      type: string
                    username:
                      type: string  
                    role :
                      type: string   
        400:
          description: Bad request
        500:
          description: internal server error        
  
  /verify-email:
     post:
      tags:
        - Userlogin
      summary: Verify User By Email-Verification
      consumes:
        - application/json
      produces:
        - application/json  
      requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                     type: string
                  OTP:
                     type: string
                  
      responses:
        '200': #status code
          description: Get Verified User
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      email:
                        type: string
                      token:
                        type: string  
                      isVerified:
                        type: boolean 
                        default: false
                      role:
                        type: string   
                  message:
                    type: string               
        400:
          description: Bad request
        500:
          description: internal server error          


 